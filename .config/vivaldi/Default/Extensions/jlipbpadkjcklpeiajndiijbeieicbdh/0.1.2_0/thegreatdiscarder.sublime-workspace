{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"getS",
				"getSettingsDefaults"
			],
			[
				"init",
				"initialized"
			],
			[
				"factO",
				"factOptions"
			],
			[
				"initia",
				"initializeFact"
			],
			[
				"_t",
				"_finalLeafNodePointer"
			],
			[
				"first",
				"firstAggregatedDimension"
			],
			[
				"sam",
				"sampleNewLeafNode"
			],
			[
				"agg",
				"aggregateAtThisDepth"
			],
			[
				"TYP",
				"TYPE_LIBRARY"
			],
			[
				"factD",
				"factDefinition"
			],
			[
				"cus",
				"customReport"
			],
			[
				"fact",
				"factAggregationByFactName"
			],
			[
				"lea",
				"leafNode"
			],
			[
				"data",
				"dataAnalyzer"
			],
			[
				"for",
				"foreignItems"
			],
			[
				"tab",
				"tableName"
			],
			[
				"fore",
				"foreignTables"
			],
			[
				"cal",
				"calendar"
			],
			[
				"st",
				"stopTime"
			],
			[
				"star",
				"startDate"
			],
			[
				"endD",
				"endDateAsMoment"
			],
			[
				"tuS",
				"tuSnapshotRouteData"
			],
			[
				"s",
				"source"
			],
			[
				"noDa",
				"noDataPeriods"
			],
			[
				"groupKye",
				"groupKeyValue"
			],
			[
				"groupKy",
				"groupKeyName"
			],
			[
				"TABLES",
				"TABLES"
			],
			[
				"week",
				"weeklyPattern"
			],
			[
				"day",
				"day_of_week"
			],
			[
				"dates",
				"datesForWeek"
			],
			[
				"it",
				"itemForeignIdByTableName"
			],
			[
				"curr",
				"currentLeafNodes"
			],
			[
				"sna",
				"snapshot"
			],
			[
				"sta",
				"statisticsByDate"
			],
			[
				"getTableBy",
				"getTableByPrimaryKey"
			],
			[
				"snap",
				"snapshotRouteData"
			],
			[
				"export",
				"exportOptions"
			],
			[
				"expor",
				"exportOptions"
			],
			[
				"expo",
				"exportOptions"
			],
			[
				"depen",
				"dependencies"
			],
			[
				"depend",
				"dependencyName"
			],
			[
				"de",
				"dependencies"
			],
			[
				"depe",
				"dependencyName"
			],
			[
				"avail",
				"availableTableNames"
			],
			[
				"ava",
				"availableTableNames"
			],
			[
				"factDef",
				"factDefinitions"
			],
			[
				"curre",
				"currentTableDefinition (?)"
			],
			[
				"factDepen",
				"factDependencyName"
			],
			[
				"factDepe",
				"factDependencyName (?)"
			],
			[
				"factDe",
				"factDependencyName (?)"
			],
			[
				"date",
				"datesForWeek (?)"
			],
			[
				"getTabl",
				"getTableByGroupKey (fn)"
			],
			[
				"_table",
				"_tableItemByPrimaryKeyByTableName (obj)"
			],
			[
				"pri",
				"primaryKey"
			],
			[
				"_",
				"_tableItemByPrimaryKeyByTableName (obj)"
			],
			[
				"table",
				"tableDefinition (?)"
			],
			[
				"tabl",
				"tableService (obj)"
			],
			[
				"end",
				"endDateAsMoment (?)"
			],
			[
				"gener",
				"generateDateStringsBetweenDates"
			],
			[
				"YYYY",
				"YYYY-MM-DD"
			],
			[
				"fist",
				"firstMondayAsMoment (?)"
			],
			[
				"forei",
				"foreignTablesToIterate ([])"
			],
			[
				"fo",
				"foreignTables"
			],
			[
				"dateS",
				"dateStringsForSource (?)"
			],
			[
				"dateSt",
				"dateStringsForSource"
			],
			[
				"merg",
				"mergingStrategy (?)"
			],
			[
				"aggre",
				"aggregatedFactNames ([])"
			],
			[
				"getTab",
				"getGroupKeyForTable (fn)"
			],
			[
				"l",
				"leafNode (obj)"
			],
			[
				"pro",
				"processedTableName (?)"
			],
			[
				"un",
				"unprocessedFactNames (obj)"
			],
			[
				"valu",
				"valuesByFactName (obj)"
			],
			[
				"miss",
				"missingDimensionTableNames ([])"
			],
			[
				"dim",
				"dimensionTableItems (?)"
			],
			[
				"KEY_",
				"KEY_FOREIGN_IDS (?)"
			],
			[
				"KEY",
				"KEY_TYPE (?)"
			],
			[
				"factN",
				"factNamesToProcess ([])"
			],
			[
				"prod",
				"processedTableName (?)"
			],
			[
				"inter",
				"foreignKeysIntersect"
			],
			[
				"tableN",
				"tableName (?)"
			],
			[
				"match",
				"matchingNodes"
			],
			[
				"tableNa",
				"tableNames (obj)"
			],
			[
				"repo",
				"reportableFactNames ([])"
			],
			[
				"bran",
				"branchItemByTableName (obj)"
			],
			[
				"timer",
				"timerByKey (obj)"
			],
			[
				"holi",
				"holidayName (?)"
			],
			[
				"holid",
				"holidayNamesByDateString (obj)"
			],
			[
				"require",
				"requiredDimensions"
			],
			[
				"getFac",
				"getFactTableValue"
			],
			[
				"proces",
				"processedSnapshot (?)"
			],
			[
				"newS",
				"newStarsByFeedId (obj)"
			],
			[
				"fee",
				"feeds ([])"
			],
			[
				"fu",
				"function (?)"
			],
			[
				"susp",
				"suspiciousDatesByGlobalRouteId"
			],
			[
				"su",
				"suspiciousRoutes"
			],
			[
				"sus",
				"suspiciousRoutes ([])"
			],
			[
				"defaul",
				"defaultValueByKey (?)"
			],
			[
				"net",
				"networkIds ([])"
			],
			[
				"fiel",
				"fieldIndexesToKeep ([])"
			],
			[
				"g",
				"global_recipe_id (?)"
			],
			[
				"number",
				"numberOfRtTrips (num)"
			],
			[
				"numb",
				"numberOfTrips (?)"
			],
			[
				"rout",
				"routeId (?)"
			],
			[
				"numberOf",
				"numberOfRtTripsByRouteId (obj)"
			],
			[
				"err",
				"errorString (str)"
			],
			[
				"count",
				"countryCodes (?)"
			],
			[
				"d",
				"display"
			],
			[
				"padd",
				"padding-left"
			],
			[
				"inlin",
				"inline-block"
			],
			[
				"dec",
				"text-decoration"
			],
			[
				"po",
				"pokemonsById (obj)"
			],
			[
				"pokem",
				"pokemonId"
			],
			[
				"back",
				"background-color"
			],
			[
				"spec",
				"specialAttacks"
			],
			[
				"oppon",
				"opponent"
			],
			[
				"_get",
				"_getMyPokemons (fn)"
			],
			[
				"pok",
				"pokemons"
			],
			[
				"get",
				"getMyPokemons (fn)"
			],
			[
				"selec",
				"selectAll (fn)"
			],
			[
				"my",
				"myPokemons"
			],
			[
				"fon",
				"font-size"
			],
			[
				"opp",
				"opponent"
			],
			[
				"oppo",
				"opponents"
			],
			[
				"att",
				"newAttacks"
			],
			[
				"re",
				"resistantTo (?)"
			],
			[
				"quick",
				"quickAttacks"
			],
			[
				"targetPok",
				"targetPokemonId (?)"
			],
			[
				"quic",
				"quickAttacks"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/dean/Documents/thegreatdiscarder/src/manifest.json",
			"settings":
			{
				"buffer_size": 1597,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/dean/Documents/thegreatdiscarder/src/html/popup.html",
			"settings":
			{
				"buffer_size": 1677,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/* global chrome */\n/*\n * The Great Suspender\n * Copyright (C) 2016 Dean Oemcke\n * Available under GNU GENERAL PUBLIC LICENSE v2\n * http://github.com/deanoemcke/thegreatsuspender\n * ༼ つ ◕_◕ ༽つ\n*/\n\n'use strict';\n\nconst storage = '/js/storage.js';\nconst suspensionActiveIcon = '/img/icon19.png';\nconst suspensionPausedIcon = '/img/icon19b.png';\nconst debug = false;\n\n\n//initialise global state vars\nvar options = {};\nvar tabStates = {};\nvar globalCurrentTabId;\nvar chargingMode = false;\nvar audibleTabsList = {};\n\n//initialise tabStates and options\nchrome.runtime.onStartup.addListener(function () {\n  chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {\n\n  });\n  storage.setTabStates(tabStates);\n  storage.getOptions(function (result) {\n    options = result;\n  });\n});\n\n//initialise options\n\n\n//add listener for battery state changes\nif (navigator.getBattery) {\n  navigator.getBattery().then(function(battery) {\n\n    chargingMode = battery.charging;\n    battery.onchargingchange = function () {\n       chargingMode = battery.charging;\n    };\n  });\n}\n\n//add listeners\nchrome.runtime.onMessage.addListener(messageRequestListener);\nchrome.commands.onCommand.addListener(commandListener);\n\n//listen for focus changes\nchrome.windows.onFocusChanged.addListener(function (windowId) {\n  handleWindowFocusChanged(windowId);\n});\nchrome.tabs.onActivated.addListener(function (activeInfo) {\n  handleTabFocusChanged(activeInfo.tabId, activeInfo.windowId);\n});\n\nchrome.tabs.onUpdated.addListener(function(tabId, changeInfo, tab) {\n\n  //check for tab playing audio\n  if (tab.audible) {\n    audibleTabsList[tab.id] = true;\n\n  //else check if tab WAS playing audio (and now isnt)\n  } else if (audibleTabsList[tab.id]) {\n    delete audibleTabsList[tab.id];\n    if (debug) { console.log('tab finished playing audio. restarting timer: ' + tab.id); }\n  }\n});\n\n\n\n\nfunction isSuspended(tab) {\n  return tab.discarded;\n}\n\n//tests for non-standard web pages. does not check for suspended pages!\nfunction isSpecialTab(tab) {\n  var url = tab.url;\n\n  if ((url.indexOf('chrome-extension:') === 0 && url.indexOf('suspended.html') < 0)\n      || url.indexOf('chrome:') === 0\n      || url.indexOf('chrome-devtools:') === 0\n      || url.indexOf('file:') === 0\n      || url.indexOf('chrome.google.com/webstore') >= 0) {\n    return true;\n  }\n  return false;\n}\n\nfunction isPinnedTab(tab) {\n  var dontSuspendPinned = storage.getOption(storage.IGNORE_PINNED);\n  return dontSuspendPinned && tab.pinned;\n}\n\nfunction isAudibleTab(tab) {\n  var dontSuspendAudible = storage.getOption(storage.IGNORE_AUDIO);\n  return dontSuspendAudible && tab.audible;\n}\n\nfunction isExcluded(tab) {\n  if (tab.active) {\n    return true;\n  }\n\n  //don't allow suspending of special tabs\n  if (isSpecialTab(tab)) {\n    return true;\n  }\n\n  //check whitelist\n  if (storage.checkWhiteList(tab.url)) {\n    return true;\n  }\n\n  if (isPinnedTab(tab)) {\n    return true;\n  }\n\n  if (isAudibleTab(tab)) {\n    return true;\n  }\n  return false;\n}\n\nfunction requestTabSuspension(tab, force) {\n  force = force || false;\n\n  //safety check\n  if (typeof(tab) === 'undefined') { return; }\n\n  //make sure tab is not special or already suspended\n  if (isSuspended(tab) || isSpecialTab(tab)) { return; }\n\n  //if forcing tab suspend then skip other checks\n  if (force) {\n    suspendTab(tab);\n\n  //otherwise perform soft checks before suspending\n  } else {\n\n    //check whitelist\n    if (isExcluded(tab)) {\n      return;\n    }\n    //check internet connectivity\n    if (storage.getOption(storage.ONLINE_CHECK) && !navigator.onLine) {\n      return;\n    }\n    //check if computer is running on battery\n    if (storage.getOption(storage.BATTERY_CHECK) && chargingMode) {\n      return;\n\n    } else {\n      suspendTab(tab);\n    }\n  }\n}\n\nfunction resetAllTabTimers() {\n\n}\n\nfunction suspendTab(tab) {\n  chrome.tabs.discard(tab.id);\n}\n\nfunction whitelistHighlightedTab() {\n  chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {\n    if (tabs.length > 0) {\n      var rootUrlStr = storage.getRootUrl(tabs[0].url);\n      storage.saveToWhitelist(rootUrlStr);\n      if (isSuspended(tabs[0])) {\n        unsuspendTab(tabs[0]);\n      }\n    }\n  });\n}\n\nfunction unwhitelistHighlightedTab() {\n  chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {\n    if (tabs.length > 0) {\n      storage.removeFromWhitelist(tabs[0].url);\n    }\n  });\n}\n\nfunction temporarilyWhitelistHighlightedTab() {\n\n  chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {\n    if (tabs.length > 0) {\n\n    }\n  });\n}\n\nfunction undoTemporarilyWhitelistHighlightedTab() {\n  chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {\n    if (tabs.length > 0) {\n\n    }\n  });\n}\n\nfunction suspendHighlightedTab() {\n  chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {\n    if (tabs.length > 0) {\n      suspendTab(tabs[0], true);\n    }\n  });\n}\n\nfunction unsuspendHighlightedTab() {\n  chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {\n    if (tabs.length > 0 && isSuspended(tabs[0])) {\n      unsuspendTab(tabs[0]);\n    }\n  });\n}\n\nfunction suspendAllTabs() {\n  chrome.tabs.query({ active: true, currentWindow: true }, function(tabs) {\n    var curWindowId = tabs[0].windowId;\n    chrome.windows.get(curWindowId, {populate: true}, function(curWindow) {\n      curWindow.tabs.forEach(function (tab) {\n        if (!tab.active) {\n          requestTabSuspension(tab, true);\n        }\n      });\n    });\n  });\n}\n\n\nfunction suspendAllTabsInAllWindows() {\n  chrome.tabs.query({}, function (tabs) {\n    tabs.forEach(function (currentTab) {\n      requestTabSuspension(currentTab, true);\n    });\n  });\n}\n\nfunction unsuspendAllTabs() {\n  chrome.tabs.query({ active: true, currentWindow: true }, function(tabs) {\n    var curWindowId = tabs[0].windowId;\n    chrome.windows.get(curWindowId, {populate: true}, function(curWindow) {\n      curWindow.tabs.forEach(function (currentTab) {\n        if (isSuspended(currentTab)) {\n          unsuspendTab(currentTab);\n        }\n      });\n    });\n  });\n}\n\nfunction unsuspendAllTabsInAllWindows() {\n  chrome.tabs.query({}, function (tabs) {\n    tabs.forEach(function (currentTab) {\n      if (isSuspended(currentTab)) { unsuspendTab(currentTab); }\n    });\n  });\n}\n\nfunction suspendSelectedTabs() {\n  chrome.tabs.query({highlighted: true, lastFocusedWindow: true}, function (selectedTabs) {\n    selectedTabs.forEach(function (tab) {\n      requestTabSuspension(tab, true);\n    });\n  });\n}\n\nfunction unsuspendSelectedTabs() {\n  chrome.tabs.query({highlighted: true, lastFocusedWindow: true}, function (selectedTabs) {\n    selectedTabs.forEach(function (tab) {\n      if (isSuspended(tab)) {\n        unsuspendTab(tab);\n      }\n    });\n  });\n}\n\nfunction unsuspendTab(tab) {\n  var url = storage.getSuspendedUrl(tab.url),\n    views,\n    result;\n\n  //bit of a hack here as using the chrome.tabs.update method will not allow\n  //me to 'replace' the url - leaving a suspended tab in the history\n  views = chrome.extension.getViews({type: 'tab', \"windowId\": tab.windowId});\n  result = views.some(function (view) {\n    if (view.tabId === tab.id) {\n      view.location.replace(url);\n      return true;\n    }\n  });\n\n  //if we failed to find the tab with the above method then try to update it directly\n  if (!result) {\n    chrome.tabs.update(tab.id, {url: url}, function() {\n      if (chrome.runtime.lastError) {\n        console.log(chrome.runtime.lastError.message);\n      }\n    });\n  }\n}\n\nfunction handleWindowFocusChanged(windowId) {\n\n  if (debug) {\n    console.log('window changed: ' + windowId);\n  }\n\n  chrome.tabs.query({active: true, windowId: windowId}, function(tabs) {\n    if (tabs && tabs.length === 1) {\n\n      globalCurrentTabId = tabs[0].id;\n\n      //update icon\n      requestTabInfo(tabs[0].id, function (info) {\n        updateIcon(info.status);\n      });\n    }\n  });\n}\n\nfunction handleTabFocusChanged(tabId, windowId) {\n\n  if (debug) {\n    console.log('tab changed: ' + tabId);\n  }\n\n  globalCurrentTabId = tabId;\n\n  //update icon\n  requestTabInfo(tabId, function (info) {\n    updateIcon(info.status);\n  });\n\n  //pause for a bit before assuming we're on a new tab as some users\n  //will key through intermediate tabs to get to the one they want.\n  (function () {\n    var selectedTab = tabId;\n    setTimeout(function () {\n      if (selectedTab === globalCurrentTabId) {\n        handleNewTabFocus(globalCurrentTabId);\n      }\n    }, 500);\n  }());\n}\n\nfunction handleNewTabFocus(tabId) {\n  var unsuspend = storage.getOption(storage.UNSUSPEND_ON_FOCUS);\n\n  //if pref is set, then unsuspend newly focused tab\n  if (unsuspend) {\n    //get tab object so we can check if it is a special or suspended tab\n    chrome.tabs.get(tabId, function (tab) {\n      if (!isSpecialTab(tab) && isSuspended(tab)) {\n        unsuspendTab(tab);\n      }\n    });\n  }\n}\n\n//get info for a tab. defaults to currentTab if no id passed in\n//returns the current tab suspension and timer states. possible suspension states are:\n\n//normal: a tab that will be suspended\n//special: a tab that cannot be suspended\n//suspended: a tab that is suspended\n//never: suspension timer set to 'never suspend'\n//formInput: a tab that has a partially completed form (and IGNORE_FORMS is true)\n//audible: a tab that is playing audio (and IGNORE_AUDIO is true)\n//tempWhitelist: a tab that has been manually paused\n//pinned: a pinned tab (and IGNORE_PINNED is true)\n//whitelisted: a tab that has been whitelisted\n//charging: computer currently charging (and BATTERY_CHECK is true)\n//noConnectivity: internet currently offline (and ONLINE_CHECK is true)\n//unknown: an error detecting tab status\nfunction requestTabInfo(tabId, callback) {\n\n  var info = {\n      windowId: '',\n      tabId: '',\n      status: 'unknown',\n      timerUp: '-'\n    };\n  tabId = tabId || globalCurrentTabId;\n\n  if (typeof(tabId) === 'undefined') {\n    callback(info);\n    return;\n  }\n\n  chrome.tabs.get(tabId, function (tab) {\n\n    if (chrome.runtime.lastError) {\n      if (debug) { console.log(chrome.runtime.lastError.message); }\n      callback(info);\n\n    } else {\n\n      info.windowId = tab.windowId;\n      info.tabId = tab.id;\n\n      //check if it is a special tab\n      if (isSpecialTab(tab)) {\n        info.status = 'special';\n        callback(info);\n\n      //check if it has already been suspended\n      } else if (isSuspended(tab)) {\n        info.status = 'suspended';\n        callback(info);\n\n      } else {\n        info.status = 'other';\n        callback(info);\n      }\n    }\n  });\n}\n\nfunction processActiveTabStatus(tab, status) {\n\n  var suspendTime = storage.getOption(storage.SUSPEND_TIME),\n    onlySuspendOnBattery = storage.getOption(storage.BATTERY_CHECK),\n    onlySuspendWithInternet = storage.getOption(storage.ONLINE_CHECK);\n\n  //check whitelist\n  if (storage.checkWhiteList(tab.url)) {\n    status = 'whitelisted';\n\n  //check pinned tab\n  } else if (status === 'normal' && isPinnedTab(tab)) {\n    status = 'pinned';\n\n  //check audible tab\n  } else if (status === 'normal' && isAudibleTab(tab)) {\n    status = 'audible';\n\n  //check never suspend\n  } else if (status === 'normal' && suspendTime === \"0\") {\n    status = 'never';\n\n  //check running on battery\n  } else if (status === 'normal' && onlySuspendOnBattery && chargingMode) {\n    status = 'charging';\n\n  //check internet connectivity\n  } else if (status === 'normal' && onlySuspendWithInternet && !navigator.onLine) {\n    status = 'noConnectivity';\n  }\n  return status;\n}\n\n//change the icon to either active or inactive\nfunction updateIcon(status) {\n  var icon = status !== 'normal' ? suspensionPausedIcon : suspensionActiveIcon;\n  chrome.browserAction.setIcon({path: icon});\n}\n\n\n//HANDLERS FOR MESSAGE REQUESTS\n\nfunction messageRequestListener(request, sender, sendResponse) {\n  if (debug) {\n    console.log('listener fired:', request.action);\n    console.dir(sender);\n  }\n\n  switch (request.action) {\n\n  case 'reportTabState':\n    if (sender.tab && sender.tab.id === globalCurrentTabId) {\n      var status = processActiveTabStatus(sender.tab, request.status);\n      updateIcon(status);\n    }\n    break;\n\n  case 'suspendTab':\n    requestTabSuspension(sender.tab);\n    break;\n\n  case 'suspendOne':\n    suspendHighlightedTab();\n    break;\n\n  case 'unsuspendOne':\n    unsuspendHighlightedTab();\n    break;\n\n  case 'tempWhitelist':\n    temporarilyWhitelistHighlightedTab();\n    break;\n\n  case 'undoTempWhitelist':\n    undoTemporarilyWhitelistHighlightedTab();\n    break;\n\n  case 'whitelist':\n    whitelistHighlightedTab();\n    break;\n\n  case 'removeWhitelist':\n    unwhitelistHighlightedTab();\n    break;\n\n  case 'suspendAll':\n    suspendAllTabs();\n    break;\n\n  case 'unsuspendAll':\n    unsuspendAllTabs();\n    break;\n\n  case 'suspendSelected':\n    suspendSelectedTabs();\n    break;\n\n  case 'unsuspendSelected':\n    unsuspendSelectedTabs();\n    break;\n\n  default:\n    break;\n  }\n}\n\n\n//HANDLERS FOR KEYBOARD SHORTCUTS\n\nfunction commandListener (command) {\n  if (command === '1-suspend-tab') {\n    suspendHighlightedTab();\n\n  } else if (command === '2-unsuspend-tab') {\n    unsuspendHighlightedTab();\n\n  } else if (command === '3-suspend-active-window') {\n    suspendAllTabs();\n\n  } else if (command === '4-unsuspend-active-window') {\n    unsuspendAllTabs();\n\n  } else if (command === '5-suspend-all-windows') {\n    suspendAllTabsInAllWindows();\n\n  } else if (command === '6-unsuspend-all-windows') {\n    unsuspendAllTabsInAllWindows();\n  }\n}\n\n\n",
			"file": "background.js",
			"file_size": 13264,
			"file_write_time": 131249209150000000,
			"settings":
			{
				"buffer_size": 13438,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/dean/Documents/thegreatdiscarder/src/html/options.html",
			"settings":
			{
				"buffer_size": 3528,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/dean/Documents/thegreatdiscarder/src/html/profiler.html",
			"settings":
			{
				"buffer_size": 609,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "options.js",
			"settings":
			{
				"buffer_size": 4022,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "popup.js",
			"settings":
			{
				"buffer_size": 5786,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "profiler.js",
			"settings":
			{
				"buffer_size": 1868,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "whitelist.js",
			"settings":
			{
				"buffer_size": 2132,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "storage.js",
			"settings":
			{
				"buffer_size": 2630,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "'use strict'"
			}
		},
		{
			"contents": "Searching 25 files for \"utils\" (regex, case sensitive)\n\n/Users/dean/Documents/thegreatdiscarder/src/manifest.json:\n   15    ],\n   16    \"background\": {\n   17:     \"scripts\": [\"js/db.js\", \"js/utils.js\", \"js/background.js\"],\n   18      \"persistent\": true\n   19    },\n\n/Users/dean/Documents/thegreatdiscarder/src/js/background.js:\n    1: /* global utils, gsTimes, chrome */\n    2  /*\n    3   * The Great Suspender\n    .\n   30  \n   31      //set gloabl sessionId\n   32:     sessionId = utils.generateSessionId();\n   33      if (debug) console.log('sessionId: ' + sessionId);\n   34  \n   35      function savePreview(tab, previewUrl) {\n   36          if (previewUrl) {\n   37:             utils.addPreviewImage(tab.url, previewUrl);\n   38          }\n   39      }\n   ..\n   65  \n   66          //add suspend information to suspendedTabInfo\n   67:         utils.addSuspendedTabInfo(tabProperties, function() {\n   68              if (typeof(callback) === \"function\") callback();\n   69          });\n   ..\n   85  \n   86      function isPinnedTab(tab) {\n   87:         var dontSuspendPinned = utils.getOption(utils.IGNORE_PINNED);\n   88          return dontSuspendPinned && tab.pinned;\n   89      }\n   90  \n   91      function isAudibleTab(tab) {\n   92:         var dontSuspendAudible = utils.getOption(utils.IGNORE_AUDIO);\n   93          return dontSuspendAudible && tab.audible;\n   94      }\n   ..\n  105  \n  106          //check whitelist\n  107:         if (utils.checkWhiteList(tab.url)) {\n  108              return true;\n  109          }\n  ...\n  125  \n  126              //if we need to save a preview image\n  127:             if (utils.getOption(utils.SCREEN_CAPTURE) !== '0') {\n  128                  chrome.tabs.executeScript(tab.id, { file: 'js/html2canvas.min.js' }, function () {\n  129                      sendMessageToTab(tab.id, {\n  130                          action: 'generatePreview',\n  131:                         suspendedUrl: utils.generateSuspendedUrl(tab),\n  132:                         screenCapture: utils.getOption(utils.SCREEN_CAPTURE)\n  133                      });\n  134                  });\n  ...\n  137                  sendMessageToTab(tab.id, {\n  138                      action: 'confirmTabSuspend',\n  139:                     suspendedUrl: utils.generateSuspendedUrl(tab)\n  140                  });\n  141              }\n  ...\n  164              }\n  165              //check internet connectivity\n  166:             if (utils.getOption(utils.ONLINE_CHECK) && !navigator.onLine) {\n  167                  return;\n  168              }\n  169              //check if computer is running on battery\n  170:             if (utils.getOption(utils.BATTERY_CHECK) && chargingMode) {\n  171                  return;\n  172  \n  ...\n  180          chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {\n  181              if (tabs.length > 0) {\n  182:                 var rootUrlStr = utils.getRootUrl(tabs[0].url);\n  183:                 utils.saveToWhitelist(rootUrlStr);\n  184                  if (isSuspended(tabs[0])) {\n  185                      unsuspendTab(tabs[0]);\n  ...\n  192          chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {\n  193              if (tabs.length > 0) {\n  194:                 utils.removeFromWhitelist(tabs[0].url);\n  195              }\n  196          });\n  ...\n  233                  title: linkedUrl\n  234              },\n  235:             suspendedUrl = utils.generateSuspendedUrl(fakeTabProperties),\n  236              index = parentTab.index + 1,\n  237              tabPropertyOverrides = {\n  ...\n  337  \n  338      function resetTabTimer(tabId) {\n  339:         var timeout = utils.getOption(utils.SUSPEND_TIME);\n  340          sendMessageToTab(tabId, {action: 'resetTimer', suspendTime: timeout});\n  341      }\n  ...\n  346  \n  347      function unsuspendTab(tab) {\n  348:         var url = utils.getSuspendedUrl(tab.url),\n  349              views,\n  350              result;\n  ...\n  433  \n  434      function handleNewTabFocus(tabId) {\n  435:         var unsuspend = utils.getOption(utils.UNSUSPEND_ON_FOCUS);\n  436  \n  437          //if pref is set, then unsuspend newly focused tab\n  ...\n  452      function reinjectContentScripts() {\n  453          chrome.tabs.query({}, function (tabs) {\n  454:             var timeout = utils.getOption(utils.SUSPEND_TIME);\n  455  \n  456              tabs.forEach(function (currentTab) {\n  ...\n  472      function runStartupChecks() {\n  473  \n  474:         var lastVersion = utils.fetchLastVersion(),\n  475              curVersion = chrome.runtime.getManifest().version,\n  476:             contextMenus = utils.getOption(utils.ADD_CONTEXT);\n  477  \n  478          //if version has changed then assume initial install or upgrade\n  479          if (lastVersion !== curVersion) {\n  480:             utils.setLastVersion(curVersion);\n  481  \n  482              //if they are installing for the first time\n  ...\n  495                  if (lastVersion < 6.12) {\n  496  \n  497:                     utils.performOldMigration(lastVersion, function() {\n  498  \n  499                          //show update screen\n  ...\n  504                  } else {\n  505  \n  506:                     utils.performNewMigration(lastVersion);\n  507  \n  508                      //show update screen\n  ...\n  522          //trim excess dbItems\n  523          if (lastVersion > 6.12) {\n  524:             utils.trimDbItems();\n  525          }\n  526  \n  ...\n  533          var xhr = new XMLHttpRequest(),\n  534              resp,\n  535:             lastNoticeVersion = utils.fetchNoticeVersion();\n  536  \n  537          xhr.open(\"GET\", \"http://greatsuspender.github.io/notice.json\", true);\n  ...\n  551  \n  552                  //update local notice version\n  553:                 utils.setNoticeVersion(resp.version);\n  554  \n  555                  //show notice page\n  ...\n  648      function processActiveTabStatus(tab, status) {\n  649  \n  650:         var suspendTime = utils.getOption(utils.SUSPEND_TIME),\n  651:             onlySuspendOnBattery = utils.getOption(utils.BATTERY_CHECK),\n  652:             onlySuspendWithInternet = utils.getOption(utils.ONLINE_CHECK);\n  653  \n  654          //check whitelist\n  655:         if (utils.checkWhiteList(tab.url)) {\n  656              status = 'whitelisted';\n  657  \n  ...\n  810          case 'prefs':\n  811              sendResponse({\n  812:                 dontSuspendForms: utils.getOption(utils.IGNORE_FORMS),\n  813:                 suspendTime: utils.getOption(utils.SUSPEND_TIME),\n  814:                 screenCapture: utils.getOption(utils.SCREEN_CAPTURE),\n  815                  tabId: sender.tab.id\n  816              });\n  ...\n  954  \n  955          if (url.indexOf('suspended.html') >= 0) {\n  956:             url = utils.getSuspendedUrl(url);\n  957  \n  958              //remove suspended tab history item\n  ...\n  983      _gaq.push(['_setAccount', 'UA-52338347-1']);\n  984      _gaq.push(['_setCustomVar', 1, 'version', chrome.runtime.getManifest().version + \"\", 1]);\n  985:     _gaq.push(['_setCustomVar', 2, 'screen_capture', utils.getOption(utils.SCREEN_CAPTURE) + \"\", 1]);\n  986:     _gaq.push(['_setCustomVar', 3, 'suspend_time', utils.getOption(utils.SUSPEND_TIME) + \"\", 1]);\n  987:     _gaq.push(['_setCustomVar', 4, 'no_nag', utils.getOption(utils.NO_NAG) + \"\", 1]);\n  988:     //_gaq.push(['_setCustomVar', 5, 'migration', utils.getOption(utils.UNSUSPEND_ON_FOCUS) + \"\", 3]);\n  989      _gaq.push(['_trackPageview']);\n  990  \n\n/Users/dean/Documents/thegreatdiscarder/src/js/options.js:\n    1: /*global utils, chrome, invert, populateOption, setScreenCaptureNoteVisibility, setOnlineCheckVisibility, setAudibleNoteVisibility, resetTabTimers */\n    2  \n    3  (function () {\n    .\n    5      'use strict';\n    6  \n    7:     var utils,\n    8          elementPrefMap,\n    9          elementIdMap,\n   ..\n   12      function initialise() {\n   13  \n   14:         utils = chrome.extension.getBackgroundPage().utils;\n   15          elementPrefMap = {\n   16:             'preview': utils.SCREEN_CAPTURE,\n   17:             'onlineCheck': utils.ONLINE_CHECK,\n   18:             'batteryCheck': utils.BATTERY_CHECK,\n   19:             'unsuspendOnFocus': utils.UNSUSPEND_ON_FOCUS,\n   20:             'dontSuspendPinned': utils.IGNORE_PINNED,\n   21:             'dontSuspendForms': utils.IGNORE_FORMS,\n   22:             'dontSuspendAudio': utils.IGNORE_AUDIO,\n   23:             'ignoreCache': utils.IGNORE_CACHE,\n   24:             'addContextMenu': utils.ADD_CONTEXT,\n   25:             'timeToSuspend': utils.SUSPEND_TIME,\n   26:             'theme': utils.THEME,\n   27:             'whitelist': utils.WHITELIST\n   28          };\n   29          elementIdMap = invert(elementPrefMap);\n   ..\n   68              element = optionEls[i];\n   69              pref = elementPrefMap[element.id];\n   70:             populateOption(element, utils.getOption(pref));\n   71          }\n   72  \n   73:         setScreenCaptureNoteVisibility(utils.getOption(utils.SCREEN_CAPTURE) !== '0');\n   74:         setAudibleNoteVisibility(utils.getChromeVersion() < 45 && utils.getOption(utils.IGNORE_AUDIO));\n   75:         setAutoSuspendOptionsVisibility(utils.getOption(utils.SUSPEND_TIME) > 0);\n   76      }\n   77  \n   ..\n  134  \n  135              //add specific screen element listeners\n  136:             if (pref === utils.SCREEN_CAPTURE) {\n  137                  setScreenCaptureNoteVisibility(getOptionValue(element) !== '0');\n  138  \n  139:             } else if (pref === utils.IGNORE_AUDIO) {\n  140:                 chromeVersion = utils.getChromeVersion();\n  141                  setAudibleNoteVisibility(chromeVersion < 45 && getOptionValue(element));\n  142  \n  143:             } else if (pref === utils.SUSPEND_TIME) {\n  144                  interval = getOptionValue(element);\n  145                  setAutoSuspendOptionsVisibility(interval > 0);\n  ...\n  151  \n  152          var pref = elementPrefMap[element.id],\n  153:             oldValue = utils.getOption(pref),\n  154              newValue = getOptionValue(element);\n  155  \n  156          //clean up whitelist before saving\n  157:         if (pref === utils.WHITELIST) {\n  158:             newValue = utils.cleanupWhitelist(newValue);\n  159          }\n  160  \n  161          //save option\n  162:         utils.setOption(elementPrefMap[element.id], newValue);\n  163  \n  164  \n  165          //if interval has changed then reset the tab timers\n  166:         if (pref === utils.SUSPEND_TIME && oldValue !== newValue) {\n  167              chrome.extension.getBackgroundPage().tgs.resetAllTabTimers();\n  168          }\n  169  \n  170          //if context menu has been disabled then remove from chrome\n  171:         if (pref === utils.ADD_CONTEXT) {\n  172              chrome.extension.getBackgroundPage().tgs.buildContextMenu(newValue);\n  173          }\n\n/Users/dean/Documents/thegreatdiscarder/src/js/utils.js:\n    4      'use strict';\n    5  \n    6:     var utils = {\n    7  \n    8          SCREEN_CAPTURE: 'screenCapture',\n    .\n  703              url = url || '';\n  704              if (url.indexOf('suspended.html') > 0) {\n  705:                 url = utils.getSuspendedUrl(url);\n  706              }\n  707  \n  ...\n 1163      };\n 1164  \n 1165:     window.utils = utils;\n 1166  \n 1167  }(window));\n\n100 matches across 4 files\n\n\nSearching 26 files for \"globStringToRegex\" (regex)\n\n/Users/dean/Documents/thegreatdiscarder/src/js/whitelist.js:\n   57  }\n   58  \n   59: function globStringToRegex (str) {\n   60      return new RegExp(preg_quote(str).replace(/\\\\\\*/g, '.*').replace(/\\\\\\?/g, '.'), 'g');\n   61  }\n\n1 match in 1 file\n\n\nSearching 26 files for \"getOption\" (regex)\n\n/Users/dean/Documents/thegreatdiscarder/src/js/background.js:\n   38  \n   39  function isPinnedTab(tab) {\n   40:     var dontSuspendPinned = utils.getOption(utils.IGNORE_PINNED);\n   41      return dontSuspendPinned && tab.pinned;\n   42  }\n   43  \n   44  function isAudibleTab(tab) {\n   45:     var dontSuspendAudible = utils.getOption(utils.IGNORE_AUDIO);\n   46      return dontSuspendAudible && tab.audible;\n   47  }\n   ..\n   93          }\n   94          //check internet connectivity\n   95:         if (utils.getOption(utils.ONLINE_CHECK) && !navigator.onLine) {\n   96              return;\n   97          }\n   98          //check if computer is running on battery\n   99:         if (utils.getOption(utils.BATTERY_CHECK) && chargingMode) {\n  100              return;\n  101  \n  ...\n  294  \n  295  function handleNewTabFocus(tabId) {\n  296:     var unsuspend = utils.getOption(utils.UNSUSPEND_ON_FOCUS);\n  297  \n  298      //if pref is set, then unsuspend newly focused tab\n  ...\n  368  function processActiveTabStatus(tab, status) {\n  369  \n  370:     var suspendTime = utils.getOption(utils.SUSPEND_TIME),\n  371:         onlySuspendOnBattery = utils.getOption(utils.BATTERY_CHECK),\n  372:         onlySuspendWithInternet = utils.getOption(utils.ONLINE_CHECK);\n  373  \n  374      //check whitelist\n  ...\n  443      case 'prefs':\n  444          sendResponse({\n  445:             dontSuspendForms: utils.getOption(utils.IGNORE_FORMS),\n  446:             suspendTime: utils.getOption(utils.SUSPEND_TIME),\n  447:             screenCapture: utils.getOption(utils.SCREEN_CAPTURE),\n  448              tabId: sender.tab.id\n  449          });\n\n/Users/dean/Documents/thegreatdiscarder/src/js/options.js:\n   84          element = optionEls[i];\n   85          pref = elementPrefMap[element.id];\n   86:         populateOption(element, utils.getOption(pref));\n   87      }\n   88  \n   89:     setAutoSuspendOptionsVisibility(utils.getOption(utils.SUSPEND_TIME) > 0);\n   90  }\n   91  \n   ..\n  102  }\n  103  \n  104: function getOptionValue(element) {\n  105      // TODO switch statement?\n  106      if (element.tagName === 'INPUT' && element.hasAttribute('type') && element.getAttribute('type') === 'checkbox') {\n  ...\n  132          //add specific screen element listeners\n  133          if (pref === utils.SUSPEND_TIME) {\n  134:             interval = getOptionValue(element);\n  135              setAutoSuspendOptionsVisibility(interval > 0);\n  136          }\n  ...\n  141  \n  142      var pref = elementPrefMap[element.id],\n  143:         oldValue = utils.getOption(pref),\n  144:         newValue = getOptionValue(element);\n  145  \n  146      //clean up whitelist before saving\n\n/Users/dean/Documents/thegreatdiscarder/src/js/storage.js:\n   15  const WHITELIST = 'whitelist';\n   16  \n   17: function getOption(prop) {\n   18      getSettings(function (settings) {\n   19          var defaults;\n   ..\n   31  }\n   32  \n   33: function getOptions() {\n   34      getSettings(function (settings) {\n   35  \n\n/Users/dean/Documents/thegreatdiscarder/src/js/whitelist.js:\n    4  \n    5  function checkWhiteList (url) {\n    6:     storage.getOption(storage.WHITELIST, function (whitelist) {\n    7  \n    8          var whitelistItems = whitelist ? whitelist.split(/[\\s\\n]+/) : [],\n    .\n   17  \n   18  function removeFromWhitelist (url) {\n   19:     storage.getOption(storage.WHITELIST, function (whitelist) {\n   20  \n   21          var whitelistItems = whitelist ? whitelist.split(/[\\s\\n]+/).sort() : '',\n   ..\n   58  \n   59  function saveToWhitelist (newString) {\n   60:     storage.getOption(storage.WHITELIST, function (whitelist) {\n   61          whitelist = whitelist ? whitelist + '\\n' + newString : newString;\n   62          whitelist = cleanupWhitelist(whitelist);\n\n22 matches across 4 files\n\n\nSearching 26 files for \"getBackgroundPage\" (regex)\n\n/Users/dean/Documents/thegreatdiscarder/src/js/options.js:\n  142      //if interval has changed then reset the tab timers\n  143      if (pref === storage.SUSPEND_TIME && oldValue !== newValue) {\n  144:         chrome.extension.getBackgroundPage().tgs.resetAllTabTimers();\n  145      }\n  146  }\n\n/Users/dean/Documents/thegreatdiscarder/src/js/popup.js:\n   70              document.getElementsByTagName('a')[0].addEventListener('click', function (e) {\n   71                  chrome.runtime.sendMessage({ action: message });\n   72:                 chrome.extension.getBackgroundPage().tgs.updateIcon('normal');\n   73                  window.close();\n   74              });\n   ..\n  133          document.getElementById('whitelist').addEventListener('click', function (e) {\n  134              chrome.runtime.sendMessage({ action: 'whitelist' });\n  135:             chrome.extension.getBackgroundPage().tgs.updateIcon(false);\n  136              window.close();\n  137          });\n  138          document.getElementById('tempWhitelist').addEventListener('click', function (e) {\n  139              chrome.runtime.sendMessage({ action: 'tempWhitelist' });\n  140:             chrome.extension.getBackgroundPage().tgs.updateIcon(false);\n  141              window.close();\n  142          });\n  ...\n  148          });\n  149  \n  150:         chrome.extension.getBackgroundPage().tgs.requestTabInfo(false, function (info) {\n  151  \n  152              var status = info.status,\n\n/Users/dean/Documents/thegreatdiscarder/src/js/profiler.js:\n   31                  currentTabs[tabs[i].id] = tabs[i];\n   32  \n   33:                 chrome.extension.getBackgroundPage().tgs.requestTabInfo(curTab.id, function (suspendInfo) {\n   34                      var html = '',\n   35                          tableEl = document.getElementById('gsProfilerBody');\n\n6 matches across 3 files\n\n\nSearching 26 files for \"utils.js\"\n\n/Users/dean/Documents/thegreatdiscarder/src/manifest.json:\n   11    ],\n   12    \"background\": {\n   13:     \"scripts\": [\"js/utils.js\", \"js/background.js\"],\n   14      \"persistent\": true\n   15    },\n\n/Users/dean/Documents/thegreatdiscarder/src/js/background.js:\n   11  \n   12  var debug = false,\n   13:     utils = '/js/utils.js',\n   14      globalCurrentTabId,\n   15      chargingMode = false,\n\n2 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 17820,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 147.0,
		"last_filter": "remove",
		"selected_items":
		[
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"isnta",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"re",
				"Package Control: Remove Package"
			],
			[
				"table",
				"Table Editor: Enable for current view"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"tab",
				"Table Editor: Enable for current view"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"package in",
				"Package Control: Install Package"
			]
		],
		"width": 602.0
	},
	"console":
	{
		"height": 661.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/dean/Documents/thegreatdiscarder",
		"/Users/dean/Documents/thegreatdiscarder/src",
		"/Users/dean/Documents/thegreatdiscarder/src/css",
		"/Users/dean/Documents/thegreatdiscarder/src/html",
		"/Users/dean/Documents/thegreatdiscarder/src/img",
		"/Users/dean/Documents/thegreatdiscarder/src/js"
	],
	"file_history":
	[
		"/Users/dean/Documents/thegreatdiscarder/src/js/contentscript.js",
		"/Users/dean/Documents/thegreatdiscarder/src/options.html",
		"/Users/dean/Documents/thegreatdiscarder/src/js/background.js",
		"/Users/dean/Documents/thegreatdiscarder/src/css/style.css",
		"/Users/dean/Documents/thegreatdiscarder/src/shortcuts.html",
		"/Users/dean/Documents/thegreatdiscarder/src/update.html",
		"/Users/dean/Documents/thegreatdiscarder/src/about.html",
		"/Users/dean/Documents/thegreatdiscarder/src/js/gsUtils.js",
		"/Users/dean/Documents/thegreatdiscarder/src/js/sessionUtils.js",
		"/Users/dean/Documents/thegreatdiscarder/src/js/history.js",
		"/Users/dean/Documents/thegreatdiscarder/src/success.html",
		"/Users/dean/Documents/thegreatdiscarder/src/history.html",
		"/Users/dean/Transit/DataAnalyzer/index.js",
		"/Users/dean/Transit/DataAnalyzer/tables/index.js",
		"/Users/dean/Transit/DataAnalyzer/exporters/mergedTuSnapshot.js",
		"/Users/dean/Transit/DataAnalyzer/exporters/suspiciousDates.js",
		"/Users/dean/Transit/DataAnalyzer/facts/dateCorruptData.js",
		"/Users/dean/Transit/DataAnalyzer/facts/dateHoliday.js",
		"/Users/dean/Transit/DataAnalyzer/facts/dateSuspicious.js",
		"/Users/dean/Transit/DataAnalyzer/facts/factDefinitions.js",
		"/Users/dean/Transit/DataAnalyzer/facts/routeTripCount.js",
		"/Users/dean/Transit/DataAnalyzer/facts/routeFirstActiveDate.js",
		"/Users/dean/Transit/DataAnalyzer/facts/routeWeeklySchedulePatterns.js",
		"/Users/dean/Transit/DataAnalyzer/importers/archivesRouteSnapshots.js",
		"/Users/dean/Transit/DataAnalyzer/importers/multipleTuSnapshots.js",
		"/Users/dean/Transit/DataAnalyzer/importers/tuSnapshot.js",
		"/Users/dean/Transit/DataAnalyzer/importers/gtfs.js",
		"/Users/dean/Transit/DataAnalyzer/lib/utils.js",
		"/Users/dean/Transit/DataAnalyzer/importers/importerDefinitions.js",
		"/Users/dean/Transit/DataAnalyzer/exporters/customReport.js",
		"/Users/dean/Transit/DataAnalyzer/facts/index.js",
		"/Users/dean/Transit/DataAnalyzer/exporters/exporterDefinitions.js",
		"/Users/dean/Transit/DataAnalyzer/tables/tableDefinitions.js",
		"/Users/dean/Transit/Transit-Update/GTFSs/SYDNFAU_456/reruns/9dac4d2e7e2ac91e1665c5b7dee52973/1_raw_current/9dac4d2e7e2ac91e1665c5b7dee52973.zip",
		"/Users/dean/Transit/DataAnalyzer/data_analyzer.sublime-project",
		"/Users/dean/originalSnapshotMerged.json",
		"/Users/dean/exportedSnapshotMerged.json",
		"/Users/dean/exportedArchivesSnapshotMerged.json",
		"/Users/dean/Transit/DataAnalyzer/resources/Holidays_CA_2015-2020.json",
		"/Users/dean/Transit/DataAnalyzer/tables/data_analyzer.sublime-project",
		"/Users/dean/Library/Application Support/Sublime Text 3/Packages/HTML-CSS-JS Prettify/.jsbeautifyrc",
		"/Users/dean/exportedSnapshot.json",
		"/Users/dean/originalSnapshot.json",
		"/Users/dean/Transit/DataAnalyzer/importers/multipleSnapshots.js",
		"/Users/dean/test1.json",
		"/Users/dean/test2.json",
		"/Users/dean/Transit/DataAnalyzer/importers/snapshot.js",
		"/Users/dean/Transit/DataAnalyzer/facts/holidayDates.js",
		"/Users/dean/Library/Application Support/Sublime Text 3/Packages/HTML-CSS-JS Prettify/HTMLPrettify.sublime-settings",
		"/Users/dean/Transit/DataAnalyzer/package.json",
		"/Users/dean/Transit/DataAnalyzer/lib/table.js",
		"/Users/dean/Transit/DataAnalyzer/facts/buildWeeklySchedulePatterns.js",
		"/Users/dean/Transit/DataAnalyzer/facts/buildHolidayDates.js",
		"/Users/dean/Transit/DataAnalyzer/lib/fact.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/210_clean/66_matchShapesWithOsm.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/210_clean/shared/tileShapes/CachedTileShape.js",
		"/Users/dean/Transit/Transit-Update-Master/shared/allFeeds.js",
		"/Users/dean/Transit/Transit-Update-Master/package.json",
		"/Users/dean/Transit/Transit-Update-Master/migrations/20160427161252-add-table-otp-port.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/210_clean/82_exportSnapshot.js",
		"/Users/dean/Transit/Transit-Update-Master/utilities/recurringJobs/updateStarsForFeeds.js",
		"/Users/dean/Transit/Transit-Update-Master/utilities/recurringJobs/runUpdateStarsForFeeds.sh",
		"/Users/dean/Transit/Transit-Update-Master/utilities/recurringJobs/feedExpiryChecker.js",
		"/Users/dean/Transit/Transit-Update-Master/gtfsTools/gtfsTools.js",
		"/Users/dean/Transit/Transit-Update-Master/gtfsTools/getPrintable/getPrintableRouteSummary.js",
		"/Users/dean/Transit/Transit-Update-Master/gtfsTools/getPrintable/getPrintable.js",
		"/Users/dean/Transit/Transit-Update-Master/gtfsTools/consolidateGtfs/removeUnusedKeys.js",
		"/Users/dean/Transit/Transit-Update-Master/tests/gtfsTools/tests_consolidateGtfs.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/WRTAMA.cpp",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/WRTAMA.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/BART.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/KCATA.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/KCATA_handleRealTime.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/DCC.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/TFGMUK.js",
		"/Users/dean/Transit/KCATA_prod.txt",
		"/Users/dean/Transit/KCATA_local.txt",
		"/Users/dean/Transit/Transit-Update-Master/gtfsTools/functionsConsolidate/removeInvalidKeysInGtfs.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/STAR.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/210_clean/10_setDefaultConfigValuesOnItems.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/210_clean/76c_checkValidityOfModeNetworkAndVehicleIds.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/210_clean/76b_checkForRealTimeConsistency.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/NRUK.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/MARTA.cpp",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/MTAS.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/TFLUUK.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/LRUK.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/ENVIAFR.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/ENVIAFR_.sh",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/LBDCIFR.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/LBDCIFR_.sh",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/TFLUUK_splitDlrAndTram.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/LAVTACA.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/MBTA.cpp",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/TCLFR.js",
		"/Users/dean/Transit/Transit-Update-Master/gtfsTools/functionsConsolidate/removeUnusedKeysInGtfs.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/210_clean/69_makeSnapshot.js",
		"/Users/dean/Transit/Transit-Update-Master/utilities/toolbox.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/190_extend/extend.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsTemplates/NextBusWithStopTag.cpp",
		"/Users/dean/Transit/Transit-Update-Master/steps/210_clean/54_removeUnusedKeys.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/210_clean/53_removeInvalidKeys.js",
		"/Users/dean/Transit/Transit-Update-Master/gtfsTools/lib/modesHelper.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/PRESCA.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/MARTA.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/MELK.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/210_clean/Gtfs.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/runner.sh",
		"/Users/dean/Transit/Transit-Update-Master/steps/210_clean/13_addGtfsRealTimeIds.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/210_clean/clean.js",
		"/Users/dean/Transit/Transit-Update-Master/gtfsTools/consolidateGtfs/removeInvalidKeys.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/210_clean/18_cleanFeedInfo.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/GCRTA.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/210_clean/72_checkForGapsInFeed.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/210_clean/89_exportReport.js",
		"/Users/dean/Transit/Transit-Update-Master/shared/generateFeedInfoHeader.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/GCRTA_setRealTimeIds.js",
		"/Users/dean/Transit/Transit-Update/GTFSs/SYDNR2AU_455/211_cleaned/feed_info.json",
		"/Users/dean/Transit/Transit-Update/GTFSs/SYDNR2AU_455/211_cleaned/networks.txt",
		"/Users/dean/Transit/Transit-Update/GTFSs/SYDNR2AU_455/211_cleaned/modes.txt",
		"/Users/dean/Transit/Transit-Update/GTFSs/SYDNR2AU_455/211_cleaned/routes.txt",
		"/Users/dean/Transit/Transit-Update-Master/GtfsObject/schema/gtfsSchema.js",
		"/Users/dean/Transit/Transit-Update-Master/GtfsObject/schema/GtfsSpecifications.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/SYDNR2AU.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/SYDNFAU.js",
		"/Users/dean/Transit/Transit-Update-Master/extensionsFeed/SYDNxAU_preprocessing.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/270_compress/compress.js",
		"/Users/dean/Transit/Transit-Update-Master/steps/290_uploadFeed/uploadFeed.js"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"-node_modules/*",
			"/Users/dean/Transit/DataAnalyzer, -node_modules/*",
			"/Users/dean/Transit/DataAnalyzer, -node_modules",
			"/Users/dean/Transit/DataAnalyzer",
			"-node_modules/*,-bower_components/*,-RealTimeInterpreter/*,*.js,*.sh,*.jade",
			"-node_modules/*,-bower_components/*,-RealTimeInterpreter/*,*.js,*.sh",
			"-node_modules/*,-bower_components/*,-RealTimeInterpreter/*,*",
			"-node_modules/*,-bower_components/*,-RealTimeInterpreter/*,*.js",
			"-node_modules/*,-bower_components/*,-RealTimeInterpreter/*,*",
			"-node_modules/*,-bower_components/*,-RealTimeInterpreter/*,*.js",
			"-node_modules/*,-bower_components/*,-RealTimeInterpreter/*,*.cpp",
			"-node_modules/*,-bower_components/*,-RealTimeInterpreter/*,*.js",
			"/Users/dean/Transit/Transit-Update-Master/tests/data/tGTFS_buildFunctions",
			"-node_modules/*,-bower_components/*,-RealTimeInterpreter/*,*.js",
			"-node_modules/*,-bower_components/*,*",
			"-node_modules/*,-bower_components/*,-*",
			"-TransitUpdateServer/,-*/GTFSs/*,*,-node_modules/*,-bower_components/*,-*.js,-*.json",
			"-TransitUpdateServer/,-*/GTFSs/*,*,-node_modules/*,-bower_components/*,*.html",
			"-TransitUpdateServer/,-*/GTFSs/*,*,-node_modules/*,-bower_components/*",
			"-TransitUpdateServer/,-*/GTFSs/*,*,-node_modules/*",
			"-TransitUpdateServer/,-*/GTFSs/*,*",
			"-TransitUpdateServer/,-*/GTFSs/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*.cpp",
			"-TransitUpdateServer/,-*/GTFSs/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*.cpp",
			"-TransitUpdateServer/,-*/GTFSs/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*.cpp",
			"-TransitUpdateServer/,-*/GTFSs/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*.jade",
			"-TransitUpdateServer/,-*/GTFSs/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*.cpp",
			"-TransitUpdateServer/,-*/GTFSs/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*.cpp",
			"-TransitUpdateServer/,-*/GTFSs/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*.jade",
			"-TransitUpdateServer/,-*/GTFSs/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*.jade",
			"-TransitUpdateServer/,-*/GTFSs/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*",
			"*",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.sh",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*.cpp",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.cpp",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js'",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.cpp",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"performLoadHistoricFeed",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.cpp,-*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.cpp",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*.cpp",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.cpp",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.sh",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*.sh",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.sh",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"/Users/dean/Transit/Transit-Update/GTFSs/RBUSFR_439/3_pruned",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"VBBDE*",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.sh",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"/Users/dean/Transit/Transit-Update/GTFSs/MLA_53",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.jade",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"/Users/dean/Transit/Transit-Update/GTFSs/RTD_106",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"*.cpp",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"*.js",
			"",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*",
			"-TransitUpdateServer/,-*/GTFSs/*,*/extensions/*",
			"-TransitUpdateServer/,-*/GTFSs/*,-*/extensions/*,*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"chrome.tabs.",
			"saveSettings",
			"getSettings",
			"getOption",
			"    ",
			"getBackgroundPage()",
			"    ",
			"\\t",
			"globalCurrentTabId",
			"messageRequestListener",
			"lastStatus",
			"updateIcon",
			"status",
			"chargingMode",
			"storage",
			"utils",
			"utils.js",
			"storage",
			"getOptionValue",
			"saveChange",
			"storage",
			"getBackgroundPage().tgs",
			"getBackgroundPage",
			"storage",
			"elementPrefMap",
			"initSettings",
			"storage",
			"utils",
			"initialise",
			"initSettings",
			"getOption",
			"getSettingsDefaults",
			"getOption",
			"storage",
			"localStorage",
			"this.",
			"noop",
			"^([^:]+): function \\(",
			"globStringToRegex",
			"this.",
			"localStorage",
			"req",
			"requestTabSuspension",
			"suspendTab",
			"confirmTabSuspension",
			"removeFrom",
			"sendMessageToTab",
			"confirmTabSuspension",
			"globalCurrentTabId",
			"lastselected",
			"isSuspended",
			"runStartupChecks",
			"notice",
			"context",
			"runStartupChecks",
			"lastTabCloseTimestamp",
			"unsuspendRequestList",
			"lastTabCloseTimestamp",
			"gsUtils",
			"populateOption",
			"note",
			"gsUtils",
			"maxHistories",
			"fetchChromeHistory",
			"session",
			"history",
			"saveWindowHistory",
			"queueSessionTimer",
			"history",
			"checkForCrashRecovery",
			"recovery",
			"option",
			"buildFact",
			"option",
			"isInitialized",
			"initializeFact",
			"factOptionsByFactName",
			"getFactTable",
			"initializeFact",
			".module",
			"initializeFact",
			"customReport",
			"initializeFact",
			"factOptionsByFactName",
			"initializeFact",
			"aggregationFunctionByFactName",
			"aggregatedFactNames",
			"addFactsToNode",
			"addFactsToNewLeafNode",
			"_finalLeafNodeCopy",
			"_aggregationNode",
			"addFactsToNewLeafNode",
			"addFactsToNode",
			"_aggregationNode",
			"addChildNodeToCurrentNode",
			"temporaryAggregationNodes",
			"temporaryNodes",
			"aggregationNodes",
			"_aggregationNode",
			"addChildNodeToCurrentNode",
			"finalDepth",
			"addChildNodeToCurrentNode",
			"processedDimensionNames",
			"aggregationNodes",
			"addChildNodeToCurrentNode",
			"addDimensionItemToLeafNode",
			"finalIteration",
			"addDimensionItemToLeafNode",
			"_aggregationNode",
			"aggregateAtThisDepth",
			"addDimensionItemToLeafNode",
			"_aggregationNode",
			"addDimensionItemToLeafNode",
			"_aggregationNode",
			"aggregationNodes",
			"3",
			"addDimensionItemToLeafNode",
			"_aggre",
			"_aggregationNode",
			"addFactsToNode",
			"addDimensionItemToLeafNode",
			"_aggregationNode",
			"importers",
			"handleError",
			"factAggregationByFactName",
			"generateReport",
			"_aggre",
			"addFactsToNode"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"  ",
			"storage",
			"getBackgroundPage()",
			"storage",
			"",
			"function $1 (",
			"",
			"utils",
			"addFactsToNode",
			"_finalLeafNodePointer",
			"_finalLeafNodeCopy",
			"_aggregatedFactsByFactName",
			"addFactsToNewLeafNode",
			"finalLeafNodes",
			"temporaryAggregationNodes",
			"temporaryNodes",
			"aggregationDepth",
			"addChildNodeToCurrentNode",
			"finalDepth",
			"finalIteration",
			"aggregationByFactName",
			"'feed'",
			"'routeSnapshot'",
			"'date'",
			"'route'",
			"dimensionDependencies:",
			"factDependencies",
			"factDependencies:",
			"dimensionService",
			"dimensionDefinition",
			"deepDimensionNames",
			"foreignDimensions",
			"table",
			"Table",
			"Dimension",
			"FactTxx",
			"factTxx",
			"Dimension",
			"dimensionItems",
			"missingDimensionNames",
			"missingDimensionsOfFact",
			"Dimension",
			"_dimension",
			"$1dimension",
			"dimensionDefinition",
			"dimensionService",
			"_dimensionService",
			"dimensionDefinitions",
			"./dimensionDefinitions",
			"dimensions/dimensionDefinitions",
			"dimensionDefinitionByName",
			"dimensions/dimensionDefinitions",
			"trip",
			"route",
			"stop",
			"calendar",
			"endDate",
			"startDate",
			"exporterDefinitions').definitionByName",
			"factDefinitionByName",
			"factDefinitions.definitionByName",
			"factDefinitions').definitionByName",
			"tableDefinitionByName",
			"tableDefinitions.definitionByName",
			"tableDefinitions').definitionByName",
			"tableDefinitionByName",
			"tableDefinitions').definitionByName",
			"definitionByName",
			"tableDefinitions').definitionByName",
			"dayOfWeek",
			"globalRouteId",
			"dateString",
			"weekYear",
			"feedId",
			"Snapshot",
			"snapshot",
			"Snapshot",
			"snapshot",
			"routeSnapshot",
			"tuSnapshot",
			"rootNode",
			"importData",
			"importOptions",
			"importData",
			"importOptions",
			"importData",
			"importType",
			"dependencies",
			"deepDimensionTables",
			"_factService",
			"_tableService",
			"_tableItemsByGroupKeyByGroupKeyNameByTableName",
			"_tableItemByPrimaryKeyByTableName",
			"_tableIdsByGroupKeyByGroupKeyNameByTableName",
			"_tableIdByPrimaryKeyByTableName",
			"_tableItemByIdByTableName",
			"",
			"routeTripCount",
			"RouteTripCount",
			"routeTripCount",
			"leafNode",
			"LeafNode",
			"foreignTables",
			"_factTable",
			"console.error(",
			"let ",
			"feed.",
			"",
			"errorMessages",
			"lodash.",
			"$1\"$2\":",
			"\"",
			"strong",
			"Target",
			"target",
			"Opponents",
			"opponents",
			"\"id\": $1,",
			"]},\\n{\"id",
			",\"evolutionMethod",
			"\"]",
			"",
			", \"fleeRate\": ",
			", \"catchRate\": ",
			", \"maxCP\": ",
			", \"defense\": ",
			", \"attack\": ",
			"\"hitPoints\": "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/dean/Documents/thegreatdiscarder/src/manifest.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1597,
						"regions":
						{
						},
						"selection":
						[
							[
								303,
								303
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/dean/Documents/thegreatdiscarder/src/html/popup.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1677,
						"regions":
						{
						},
						"selection":
						[
							[
								218,
								218
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "background.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13438,
						"regions":
						{
						},
						"selection":
						[
							[
								211,
								211
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/dean/Documents/thegreatdiscarder/src/html/options.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3528,
						"regions":
						{
						},
						"selection":
						[
							[
								179,
								179
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/dean/Documents/thegreatdiscarder/src/html/profiler.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 609,
						"regions":
						{
						},
						"selection":
						[
							[
								187,
								187
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "options.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4022,
						"regions":
						{
						},
						"selection":
						[
							[
								2086,
								2095
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 849.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "popup.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5786,
						"regions":
						{
						},
						"selection":
						[
							[
								2405,
								2407
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 550.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "profiler.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1868,
						"regions":
						{
						},
						"selection":
						[
							[
								753,
								755
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "whitelist.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2132,
						"regions":
						{
						},
						"selection":
						[
							[
								1625,
								1625
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 311.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "storage.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2630,
						"regions":
						{
						},
						"selection":
						[
							[
								1949,
								1949
							]
						],
						"settings":
						{
							"auto_name": "'use strict'",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 557.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 10,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17820,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										191,
										196
									],
									[
										345,
										350
									],
									[
										482,
										487
									],
									[
										682,
										687
									],
									[
										846,
										851
									],
									[
										1079,
										1084
									],
									[
										1095,
										1100
									],
									[
										1273,
										1278
									],
									[
										1289,
										1294
									],
									[
										1446,
										1451
									],
									[
										1621,
										1626
									],
									[
										1637,
										1642
									],
									[
										1933,
										1938
									],
									[
										2012,
										2017
									],
									[
										2028,
										2033
									],
									[
										2261,
										2266
									],
									[
										2440,
										2445
									],
									[
										2456,
										2461
									],
									[
										2636,
										2641
									],
									[
										2652,
										2657
									],
									[
										2907,
										2912
									],
									[
										2961,
										2966
									],
									[
										3256,
										3261
									],
									[
										3438,
										3443
									],
									[
										3663,
										3668
									],
									[
										3679,
										3684
									],
									[
										3878,
										3883
									],
									[
										4055,
										4060
									],
									[
										4071,
										4076
									],
									[
										4313,
										4318
									],
									[
										4329,
										4334
									],
									[
										4502,
										4507
									],
									[
										4632,
										4637
									],
									[
										4648,
										4653
									],
									[
										4823,
										4828
									],
									[
										5018,
										5023
									],
									[
										5203,
										5208
									],
									[
										5402,
										5407
									],
									[
										5565,
										5570
									],
									[
										5776,
										5781
									],
									[
										5969,
										5974
									],
									[
										5985,
										5990
									],
									[
										6048,
										6053
									],
									[
										6064,
										6069
									],
									[
										6131,
										6136
									],
									[
										6147,
										6152
									],
									[
										6228,
										6233
									],
									[
										6422,
										6427
									],
									[
										6438,
										6443
									],
									[
										6495,
										6500
									],
									[
										6511,
										6516
									],
									[
										6570,
										6575
									],
									[
										6586,
										6591
									],
									[
										6772,
										6777
									],
									[
										7086,
										7091
									],
									[
										7102,
										7107
									],
									[
										7193,
										7198
									],
									[
										7209,
										7214
									],
									[
										7292,
										7297
									],
									[
										7308,
										7313
									],
									[
										7390,
										7395
									],
									[
										7406,
										7411
									],
									[
										7569,
										7574
									],
									[
										7794,
										7799
									],
									[
										7925,
										7930
									],
									[
										7970,
										7975
									],
									[
										8041,
										8046
									],
									[
										8097,
										8102
									],
									[
										8152,
										8157
									],
									[
										8212,
										8217
									],
									[
										8278,
										8283
									],
									[
										8338,
										8343
									],
									[
										8397,
										8402
									],
									[
										8451,
										8456
									],
									[
										8508,
										8513
									],
									[
										8563,
										8568
									],
									[
										8611,
										8616
									],
									[
										8656,
										8661
									],
									[
										8890,
										8895
									],
									[
										8985,
										8990
									],
									[
										9001,
										9006
									],
									[
										9073,
										9078
									],
									[
										9106,
										9111
									],
									[
										9122,
										9127
									],
									[
										9191,
										9196
									],
									[
										9207,
										9212
									],
									[
										9359,
										9364
									],
									[
										9518,
										9523
									],
									[
										9579,
										9584
									],
									[
										9748,
										9753
									],
									[
										9997,
										10002
									],
									[
										10161,
										10166
									],
									[
										10210,
										10215
									],
									[
										10313,
										10318
									],
									[
										10479,
										10484
									],
									[
										10735,
										10740
									],
									[
										10967,
										10972
									],
									[
										11164,
										11169
									],
									[
										11267,
										11272
									],
									[
										11275,
										11280
									],
									[
										11485,
										11502
									],
									[
										11828,
										11837
									],
									[
										12006,
										12015
									],
									[
										12192,
										12201
									],
									[
										12372,
										12381
									],
									[
										12547,
										12556
									],
									[
										12757,
										12766
									],
									[
										12832,
										12841
									],
									[
										12911,
										12920
									],
									[
										13083,
										13092
									],
									[
										13152,
										13161
									],
									[
										13223,
										13232
									],
									[
										13509,
										13518
									],
									[
										13597,
										13606
									],
									[
										13689,
										13698
									],
									[
										14018,
										14027
									],
									[
										14222,
										14231
									],
									[
										14265,
										14274
									],
									[
										14466,
										14475
									],
									[
										14597,
										14606
									],
									[
										14793,
										14802
									],
									[
										15011,
										15020
									],
									[
										15238,
										15247
									],
									[
										15735,
										15752
									],
									[
										16070,
										16087
									],
									[
										16385,
										16402
									],
									[
										16691,
										16708
									],
									[
										16853,
										16870
									],
									[
										17137,
										17154
									],
									[
										17524,
										17532
									],
									[
										17719,
										17727
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								17722,
								17722
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 5,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5874.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 94.0
	},
	"pinned_build_system": "",
	"project": "thegreatdiscarder.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pa",
				"package.json"
			],
			[
				"gtfs",
				"importers/gtfs.js"
			],
			[
				"tusn",
				"importers/tuSnapshot.js"
			],
			[
				"sus",
				"exporters/suspiciousDates.js"
			],
			[
				"archivesroutesnapshots.js",
				"importers/archivesRouteSnapshots.js"
			],
			[
				"multi",
				"importers/multipleTuSnapshots.js"
			],
			[
				"expir",
				"utilities/recurringJobs/feedExpiryChecker.js"
			],
			[
				"historicalsna",
				"shared/historicalSnapshotService.js"
			],
			[
				"generatefeed",
				"shared/generateFeedInfoHeader.js"
			],
			[
				"test.js",
				"utilities/recurringJobs/test.js"
			],
			[
				"10_",
				"steps/210_clean/10_setDefaultConfigValuesOnItems.js"
			],
			[
				"getprint",
				"gtfsTools/lib/getPrintableRouteSummary.js"
			],
			[
				"pack",
				"package.json"
			],
			[
				"sch",
				"shared/scheduleChecker.js"
			],
			[
				"sche",
				"shared/scheduleChecker.js"
			],
			[
				"sched",
				"shared/scheduleChecker.js"
			],
			[
				"feedex",
				"utilities/recurringJobs/feedExpiryChecker.js"
			],
			[
				"packa",
				"package.json"
			],
			[
				"updatestar",
				"~/Transit/Transit-Update-Master/utilities/recurringJobs/updateStarsForFeeds.js"
			],
			[
				"feede",
				"utilities/recurringJobs/feedExpiryChecker.js"
			],
			[
				"allfee",
				"shared/allFeeds.js"
			],
			[
				"allfe",
				"shared/allFeeds.js"
			],
			[
				"runup",
				"utilities/recurringJobs/runUpdateStarsForFeeds.sh"
			],
			[
				"runner",
				"steps/runner.sh"
			],
			[
				"init",
				"steps/210_clean/initializeExtension.js"
			],
			[
				"paths",
				"shared/paths.js"
			],
			[
				"upload",
				"steps/290_uploadFeed/uploadFeed.js"
			],
			[
				"schedul",
				"shared/scheduleChecker.js"
			],
			[
				"calt",
				"extensionsFeed/CALT.js"
			],
			[
				"paa",
				"extensionsFeed/PAAC.js"
			],
			[
				"clean.js",
				"steps/210_clean/clean.js"
			],
			[
				"nswb",
				"extensionsFeed/NSWB1AU.js"
			],
			[
				"sydnx",
				"extensionsFeed/SYDNBxAU.js"
			],
			[
				"paac",
				"extensionsFeed/PAAC.js"
			],
			[
				"getprin",
				"gtfsTools/lib/getPrintableRouteSummary.js"
			],
			[
				"getpri",
				"gtfsTools/lib/getPrintable.js"
			],
			[
				"gtfsto",
				"gtfsTools/gtfsTools.js"
			],
			[
				"exportre",
				"steps/210_clean/89_exportReport.js"
			],
			[
				"00",
				"steps/210_clean/00_logSumupOfGtfs.js"
			],
			[
				"exten",
				"steps/190_extend/extend.js"
			],
			[
				"email",
				"shared/email.js"
			],
			[
				"step",
				"steps/Step/Step.js"
			],
			[
				"gapsin",
				"steps/210_clean/72_checkForGapsInFeed.js"
			],
			[
				"gtfst",
				"gtfsTools/gtfsTools.js"
			],
			[
				"step.js",
				"steps/Step/Step.js"
			],
			[
				"00_",
				"steps/210_clean/00_logSumupOfGtfs.js"
			],
			[
				"clone",
				"gtfsTools/lib/cloneFunctions.js"
			],
			[
				"njtr",
				"extensionsFeed/NJTR.js"
			],
			[
				"nsw",
				"extensionsFeed/NSWB1AU.js"
			],
			[
				"node",
				"Documentation/FeedNodeExtension.js"
			],
			[
				"generatesc",
				"utilities/recurringJobs/generateScheduleChangeAlerts.js"
			],
			[
				"rungen",
				"utilities/recurringJobs/runGenerateScheduleChangeAlerts.sh"
			],
			[
				"pac",
				"package.json"
			],
			[
				"schedule",
				"shared/scheduleChecker.js"
			],
			[
				"b15au",
				"extensionsFeed/SYDNB15AU.js"
			],
			[
				"holi",
				"shared/holidaysService.js"
			],
			[
				"checkover",
				"steps/210_clean/71_checkOverlappingBounds.js"
			],
			[
				"migra",
				"migrations/20160920163105-add-feeds.js"
			],
			[
				"export",
				"steps/210_clean/82_exportSnapshot.js"
			],
			[
				"migrat",
				"migrations/20160427161252-add-table-otp-port.js"
			],
			[
				"ldafr",
				"extensionsFeed/LDAFR.js"
			],
			[
				"feednodee",
				"Documentation/FeedNodeExtension.js"
			],
			[
				"fromcsv",
				"steps/210_clean/io/fromCsvStringToArray.js"
			],
			[
				"tran",
				"steps/150_transcode/transcode.js"
			],
			[
				"wmata",
				"extensionsFeed/WMATA.cpp"
			],
			[
				"tflxuk_preprocessing",
				"extensionsFeed/TFLxUK_preprocessing.js"
			],
			[
				"prepro",
				"steps/130_preprocessing/preprocessing.js"
			],
			[
				"ltsks",
				"extensionsFeed/LTSKS.js"
			],
			[
				"migrate",
				"migrations/20160427161252-add-table-otp-port.js"
			],
			[
				"stars",
				"web-ui/routes/stars.js"
			],
			[
				"cached",
				"steps/210_clean/shared/tileShapes/CachedTileShape.js"
			],
			[
				"match",
				"steps/210_clean/66_matchShapesWithOsm.js"
			],
			[
				"matchsha",
				"steps/210_clean/66_matchShapesWithOsm.js"
			],
			[
				"melk",
				"extensionsFeed/MELK.js"
			],
			[
				"marta",
				"extensionsFeed/MARTA.js"
			],
			[
				"presca",
				"extensionsFeed/PRESCA.js"
			],
			[
				"septra",
				"extensionsFeed/SEPTAR.cpp"
			],
			[
				"nruk",
				"extensionsFeed/NRUK.js"
			],
			[
				"modes",
				"gtfsTools/lib/modesHelper.js"
			],
			[
				"routebyroutecodebymode.js",
				"extensionsFeed/RATP_data/routeByRouteCodeByMode.json"
			],
			[
				"ratp_sha",
				"extensionsFeed/RATP_shared.js"
			],
			[
				"septar",
				"extensionsFeed/SEPTAR.cpp"
			],
			[
				"lruk",
				"extensionsFeed/LRUK.js"
			],
			[
				"lbdcifr",
				"extensionsFeed/LBDCIFR.js"
			],
			[
				"envi",
				"extensionsFeed/ENVIAFR.js"
			],
			[
				"star",
				"extensionsFeed/STAR.js"
			],
			[
				"removei",
				"gtfsTools/functionsConsolidate/removeInvalidKeysInGtfs.js"
			],
			[
				"removeinv",
				"~/Transit/Transit-Update-Master/gtfsTools/consolidateGtfs/removeInvalidKeys.js"
			],
			[
				"tfluuk",
				"extensionsFeed/TFLUUK.js"
			],
			[
				"addite",
				"steps/210_clean/Gtfs_addAndRemoveItem.js"
			],
			[
				"removein",
				"gtfsTools/functionsConsolidate/removeInvalidKeysInGtfs.js"
			],
			[
				"compre",
				"steps/270_compress/compress.js"
			],
			[
				"getpr",
				"gtfsTools/lib/getPrintable.js"
			],
			[
				"scheckreal",
				"steps/210_clean/76b_checkForRealTimeConsistency.js"
			],
			[
				"consol",
				"gtfsTools/functionsConsolidate/consolidate.js"
			],
			[
				"mtas.",
				"extensionsFeed/MTAS.cpp"
			],
			[
				"sydnb10",
				"extensionsFeed/SYDNB10AU.js"
			],
			[
				"sumofgt",
				"steps/210_clean/00_logSumupOfGtfs.js"
			],
			[
				"mdt",
				"extensionsFeed/MDT.js"
			],
			[
				"ets.js",
				"extensionsFeed/ETS.js"
			],
			[
				"mbta",
				"extensionsFeed/MBTA.cpp"
			],
			[
				"lavtaca",
				"extensionsFeed/LAVTACA.js"
			],
			[
				"ladot.js",
				"extensionsFeed/LADOT.js"
			],
			[
				"checkreat",
				"steps/210_clean/76b_checkForRealTimeConsistency.js"
			],
			[
				"mtas",
				"extensionsFeed/MTAS.js"
			],
			[
				"tclfr",
				"extensionsFeed/TCLFR.js"
			],
			[
				"invalid",
				"~/Transit/Transit-Update-Master/gtfsTools/consolidateGtfs/removeInvalidKeys.js"
			],
			[
				"sydnxau_preprocessing",
				"extensionsFeed/SYDNxAU_preprocessing.js"
			],
			[
				"sydnfau",
				"extensionsFeed/SYDNFAU.js"
			],
			[
				"sydnr2au",
				"extensionsFeed/SYDNR2AU.js"
			],
			[
				"toolb",
				"utilities/toolbox.js"
			],
			[
				"norta",
				"extensionsFeed/NORTA.cpp"
			],
			[
				"66_mat",
				"steps/210_clean/66_matchShapesWithOsm.js"
			],
			[
				"k",
				"extensionsFeed/KCATA.js"
			],
			[
				"checkforga",
				"steps/210_clean/72_checkForGapsInFeed.js"
			],
			[
				"checkev",
				"steps/210_clean/73_checkEvolutionOfGtfs.js"
			],
			[
				"makesnap",
				"steps/210_clean/69_makeSnapshot.js"
			],
			[
				"dcc",
				"extensionsFeed/DCC.js"
			],
			[
				"tfgmuk",
				"extensionsFeed/TFGMUK.js"
			],
			[
				"nextbuswithstoptag",
				"extensionsTemplates/NextBusWithStopTag.cpp"
			],
			[
				"bart",
				"extensionsFeed/BART.js"
			],
			[
				"wrtama",
				"extensionsFeed/WRTAMA.cpp"
			],
			[
				"removeun",
				"gtfsTools/consolidateGtfs/removeUnusedKeys.js"
			],
			[
				"gcr",
				"extensionsFeed/GCRTA.js"
			],
			[
				"generatefeedinfoheader",
				"shared/generateFeedInfoHeader.js"
			],
			[
				"cleanreport",
				"steps/210_clean/89_exportReport.js"
			],
			[
				"gcrta",
				"extensionsFeed/GCRTA.js"
			],
			[
				"remove",
				"gtfsTools/consolidateGtfs/removeUnusedKeys.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 665.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 294.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
